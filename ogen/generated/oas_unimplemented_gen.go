// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// BlockFromTimestamp implements BlockFromTimestamp operation.
//
// Returns block on or before the specified block timestamp.
//
// GET /v1/utilities/chains/{chainId}/block/from-timestamp
func (UnimplementedHandler) BlockFromTimestamp(ctx context.Context, params BlockFromTimestampParams) (r BlockFromTimestampRes, _ error) {
	return r, ht.ErrNotImplemented
}

// BlockToTimestamp implements BlockToTimestamp operation.
//
// Returns block timestamp of the specified block number.
//
// GET /v1/utilities/chains/{chainId}/block/to-timestamp
func (UnimplementedHandler) BlockToTimestamp(ctx context.Context, params BlockToTimestampParams) (r BlockToTimestampRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CheckHealth implements CheckHealth operation.
//
// Healthcheck status.
//
// GET /health
func (UnimplementedHandler) CheckHealth(ctx context.Context) (r CheckHealthRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CrossChainBlock implements CrossChainBlock operation.
//
// Returns cross chain's block on or before the timestamp of input chain's block number.
//
// GET /v1/utilities/chains/{chainId}/block/cross-chain
func (UnimplementedHandler) CrossChainBlock(ctx context.Context, params CrossChainBlockParams) (r CrossChainBlockRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetCachedModelResults implements GetCachedModelResults operation.
//
// Returns cached run results for a slug.<p>This endpoint is for analyzing model runs. To run a model
// and get results, use `POST /v1/model/run`.
//
// GET /v1/model/results
func (UnimplementedHandler) GetCachedModelResults(ctx context.Context, params GetCachedModelResultsParams) (r *ModelRuntimeStatsResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// GetChains implements GetChains operation.
//
// Returns metadata for the list of blockchains supported by Credmark platform.
//
// GET /v1/utilities/chains
func (UnimplementedHandler) GetChains(ctx context.Context) (r GetChainsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDailyModelUsage implements GetDailyModelUsage operation.
//
// Returns a list of daily model request statistics, either for a specific requester or for everyone.
//
// GET /v1/usage/requests
func (UnimplementedHandler) GetDailyModelUsage(ctx context.Context, params GetDailyModelUsageParams) (r []GetDailyModelUsageOKItem, _ error) {
	return r, ht.ErrNotImplemented
}

// GetLatestBlock implements GetLatestBlock operation.
//
// Returns latest block of the specified chain.
//
// GET /v1/utilities/chains/{chainId}/block/latest
func (UnimplementedHandler) GetLatestBlock(ctx context.Context, params GetLatestBlockParams) (r GetLatestBlockRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetModelBySlug implements GetModelBySlug operation.
//
// Returns the metadata for the specified model.
//
// GET /v1/models/{slug}
func (UnimplementedHandler) GetModelBySlug(ctx context.Context, params GetModelBySlugParams) (r *ModelMetadata, _ error) {
	return r, ht.ErrNotImplemented
}

// GetModelDeploymentsBySlug implements GetModelDeploymentsBySlug operation.
//
// Returns the deployments for a model.
//
// GET /v1/models/{slug}/deployments
func (UnimplementedHandler) GetModelDeploymentsBySlug(ctx context.Context, params GetModelDeploymentsBySlugParams) (r []ModelDeployment, _ error) {
	return r, ht.ErrNotImplemented
}

// GetModelRuntimeStats implements GetModelRuntimeStats operation.
//
// Returns runtime stats for all models.
//
// GET /v1/model/runtime-stats
func (UnimplementedHandler) GetModelRuntimeStats(ctx context.Context) (r *ModelRuntimeStatsResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPositions implements GetPositions operation.
//
// Returns positions for a list of accounts.
//
// GET /v1/portfolio/{chainId}/{accounts}/positions
func (UnimplementedHandler) GetPositions(ctx context.Context, params GetPositionsParams) (r GetPositionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPositionsHistorical implements GetPositionsHistorical operation.
//
// Returns positions for a list of accounts over a series of blocks.
//
// GET /v1/portfolio/{chainId}/{accounts}/positions/historical
func (UnimplementedHandler) GetPositionsHistorical(ctx context.Context, params GetPositionsHistoricalParams) (r GetPositionsHistoricalRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetReturns implements GetReturns operation.
//
// Returns PnL of portfolio for a list of accounts.
//
// GET /v1/portfolio/{chainId}/{accounts}/returns
func (UnimplementedHandler) GetReturns(ctx context.Context, params GetReturnsParams) (r GetReturnsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenAbi implements GetTokenAbi operation.
//
// Returns ABI of a token.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/abi
func (UnimplementedHandler) GetTokenAbi(ctx context.Context, params GetTokenAbiParams) (r GetTokenAbiRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenBalance implements GetTokenBalance operation.
//
// Returns token balance for an account.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/balance
func (UnimplementedHandler) GetTokenBalance(ctx context.Context, params GetTokenBalanceParams) (r GetTokenBalanceRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenBalanceHistorical implements GetTokenBalanceHistorical operation.
//
// Returns historical token balance for an account.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/balance/historical
func (UnimplementedHandler) GetTokenBalanceHistorical(ctx context.Context, params GetTokenBalanceHistoricalParams) (r GetTokenBalanceHistoricalRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenCreationBlock implements GetTokenCreationBlock operation.
//
// Returns creation block number of a token.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/creation-block
func (UnimplementedHandler) GetTokenCreationBlock(ctx context.Context, params GetTokenCreationBlockParams) (r GetTokenCreationBlockRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenDecimals implements GetTokenDecimals operation.
//
// Returns decimals of a token.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/decimals
func (UnimplementedHandler) GetTokenDecimals(ctx context.Context, params GetTokenDecimalsParams) (r GetTokenDecimalsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenHolders implements GetTokenHolders operation.
//
// Returns holders of a token at a block or time.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/holders
func (UnimplementedHandler) GetTokenHolders(ctx context.Context, params GetTokenHoldersParams) (r GetTokenHoldersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenHoldersCount implements GetTokenHoldersCount operation.
//
// Returns total number of holders of a token at a block or time.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/holders/count
func (UnimplementedHandler) GetTokenHoldersCount(ctx context.Context, params GetTokenHoldersCountParams) (r GetTokenHoldersCountRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenHoldersCountHistorical implements GetTokenHoldersCountHistorical operation.
//
// Returns historical total number of holders of a token at a block or time.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/holders/count/historical
func (UnimplementedHandler) GetTokenHoldersCountHistorical(ctx context.Context, params GetTokenHoldersCountHistoricalParams) (r GetTokenHoldersCountHistoricalRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenLogo implements GetTokenLogo operation.
//
// Returns logo of a token.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/logo
func (UnimplementedHandler) GetTokenLogo(ctx context.Context, params GetTokenLogoParams) (r GetTokenLogoRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenMetadata implements GetTokenMetadata operation.
//
// Returns metadata for a token.
//
// GET /v1/tokens/{chainId}/{tokenAddress}
func (UnimplementedHandler) GetTokenMetadata(ctx context.Context, params GetTokenMetadataParams) (r GetTokenMetadataRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenName implements GetTokenName operation.
//
// Returns name of a token.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/name
func (UnimplementedHandler) GetTokenName(ctx context.Context, params GetTokenNameParams) (r GetTokenNameRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenPrice implements GetTokenPrice operation.
//
// Returns price data for a token.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/price
func (UnimplementedHandler) GetTokenPrice(ctx context.Context, params GetTokenPriceParams) (r GetTokenPriceRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenPriceHistorical implements GetTokenPriceHistorical operation.
//
// Returns historical price data for a token.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/price/historical
func (UnimplementedHandler) GetTokenPriceHistorical(ctx context.Context, params GetTokenPriceHistoricalParams) (r GetTokenPriceHistoricalRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenSymbol implements GetTokenSymbol operation.
//
// Returns symbol of a token.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/symbol
func (UnimplementedHandler) GetTokenSymbol(ctx context.Context, params GetTokenSymbolParams) (r GetTokenSymbolRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenTotalSupply implements GetTokenTotalSupply operation.
//
// Returns total supply of a token.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/total-supply
func (UnimplementedHandler) GetTokenTotalSupply(ctx context.Context, params GetTokenTotalSupplyParams) (r GetTokenTotalSupplyRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenTotalSupplyHistorical implements GetTokenTotalSupplyHistorical operation.
//
// Returns historical total supply for a token.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/total-supply/historical
func (UnimplementedHandler) GetTokenTotalSupplyHistorical(ctx context.Context, params GetTokenTotalSupplyHistoricalParams) (r GetTokenTotalSupplyHistoricalRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenVolume implements GetTokenVolume operation.
//
// Returns traded volume for a token over a period of blocks or time.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/volume
func (UnimplementedHandler) GetTokenVolume(ctx context.Context, params GetTokenVolumeParams) (r GetTokenVolumeRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTokenVolumeHistorical implements GetTokenVolumeHistorical operation.
//
// Returns traded volume for a token over a period of blocks or time divided by intervals.
//
// GET /v1/tokens/{chainId}/{tokenAddress}/volume/historical
func (UnimplementedHandler) GetTokenVolumeHistorical(ctx context.Context, params GetTokenVolumeHistoricalParams) (r GetTokenVolumeHistoricalRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTopModels implements GetTopModels operation.
//
// Returns a list of the top used models.
//
// GET /v1/usage/top
func (UnimplementedHandler) GetTopModels(ctx context.Context) (r []GetTopModelsOKItem, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTotalModelUsage implements GetTotalModelUsage operation.
//
// Returns a count of model runs.
//
// GET /v1/usage/total
func (UnimplementedHandler) GetTotalModelUsage(ctx context.Context) (r []GetTotalModelUsageOKItem, _ error) {
	return r, ht.ErrNotImplemented
}

// GetValue implements GetValue operation.
//
// Returns value of portfolio for a list of accounts.
//
// GET /v1/portfolio/{chainId}/{accounts}/value
func (UnimplementedHandler) GetValue(ctx context.Context, params GetValueParams) (r GetValueRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetValueHistorical implements GetValueHistorical operation.
//
// Returns portfolio value for a list of accounts over a series of blocks.
//
// GET /v1/portfolio/{chainId}/{accounts}/value/historical
func (UnimplementedHandler) GetValueHistorical(ctx context.Context, params GetValueHistoricalParams) (r GetValueHistoricalRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListModels implements ListModels operation.
//
// Returns a list of metadata for available models.
//
// GET /v1/models
func (UnimplementedHandler) ListModels(ctx context.Context) (r []ModelMetadata, _ error) {
	return r, ht.ErrNotImplemented
}

// RunModel implements RunModel operation.
//
// Runs a model and returns result object.
//
// POST /v1/model/run
func (UnimplementedHandler) RunModel(ctx context.Context, req *RunModelDto) (r RunModelRes, _ error) {
	return r, ht.ErrNotImplemented
}
